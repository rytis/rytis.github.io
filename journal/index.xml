<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Records on Pages</title>
    <link>https://pages.pulegium.eu/journal/</link>
    <description>Recent content in Records on Pages</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Rytis Sileika</copyright>
    <lastBuildDate>Wed, 13 Mar 2013 13:33:10 +0100</lastBuildDate>
    
	<atom:link href="https://pages.pulegium.eu/journal/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick Way to Check for Url Redirects</title>
      <link>https://pages.pulegium.eu/journal/quick-way-to-check-for-url-redirects/</link>
      <pubDate>Wed, 13 Mar 2013 13:33:10 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/quick-way-to-check-for-url-redirects/</guid>
      <description>Recently I had to go through a bunch of URLs and identify whether or not they redirect to another URL. Since the list was rather long (several hundred entries), I thought I should rather write a script to do this for me.
I used the Requests library to make the initial request for a given URL. If the response code was 3XX, then I assumed it is being redirected. There are a couple of other edge cases (timeouts and generic connection errors, either due to non-existent domain, or network error) that the script attempts to cover for.</description>
    </item>
    
    <item>
      <title>Private Network over SSH</title>
      <link>https://pages.pulegium.eu/journal/private-network-over-ssh/</link>
      <pubDate>Tue, 11 Dec 2012 13:33:10 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/private-network-over-ssh/</guid>
      <description>Couple of scenarios:
 You are connected to a publicly available WiFi network that you do not trust, but you have a trusted server somewhere where you can connect to You are connected to a network that has limited access (or no access at all as it happened in my case), but you can connect to another host that can  So, what are your options?
Obviously you can set up a VPN server on the remote machine and connect to it, but it can be a bit fiddly.</description>
    </item>
    
    <item>
      <title>Network Bonding Configuration With Foreman</title>
      <link>https://pages.pulegium.eu/journal/network-bonding-configuration-with-foreman/</link>
      <pubDate>Mon, 25 Jun 2012 13:44:58 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/network-bonding-configuration-with-foreman/</guid>
      <description>This post is mostly a note to self. The snippets are kindly provided by user schewara who posted them to #theforeman IRC channel. Many thanks for sharing these snippets, they have saved me a lot of time, and hopefully will be usefull for other people as well!
What I was trying to achieve is multi-NIC with bonding configuration in Foreman/Puppet.
One way is to leave this configuration entirelly to Puppet. Another way is to configure the interfaces at the kicstart phase, which is a safer option.</description>
    </item>
    
    <item>
      <title>Setting Up Foreman on RHEL 5.7 Part 2</title>
      <link>https://pages.pulegium.eu/journal/setting-up-foreman-on-rhel-5-7-part-2/</link>
      <pubDate>Thu, 05 Apr 2012 18:31:57 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/setting-up-foreman-on-rhel-5-7-part-2/</guid>
      <description>In Part 1 we installed and configured Puppet. We have also set up puppet to write host configuration data to a PostgreSQL database using storedconfig.
Today, I&amp;rsquo;m going to show you how to install and configure:
 Foreman Foreman&amp;rsquo;s smart-proxy Integrate smart-proxy with DHCP/TFTP/DNS/Puppet  Install Foreman from the latest development branch Installing Foreman from RPM has its own advantages, but currently the situation is such that the packaged (Stable) version lags quite far behind the development branch.</description>
    </item>
    
    <item>
      <title>Use Foreman Host Parameters From Fabric</title>
      <link>https://pages.pulegium.eu/journal/use-foreman-host-parameters-from-fabric/</link>
      <pubDate>Sat, 24 Mar 2012 19:06:51 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/use-foreman-host-parameters-from-fabric/</guid>
      <description>Fabric is great for managing remote systems. You can script whatever you want to do on a remote system, and run the tasks at any time, on any set of systems. This is an excellent automation tool, as it does not require any agent processes running on the remote systems - it uses SSH for its communication with the remote hosts.
If you are using Foreman to manage your systems, you already maintain a list of servers.</description>
    </item>
    
    <item>
      <title>Setting Up Foreman on RHEL 5.7 Part 1</title>
      <link>https://pages.pulegium.eu/journal/setting-up-foreman-on-rhel-5-7-part-1/</link>
      <pubDate>Wed, 21 Mar 2012 18:32:00 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/setting-up-foreman-on-rhel-5-7-part-1/</guid>
      <description>In this set of articles we are going to go through the steps required to get a fully functional setup of Puppet 2.7.12 and Foreman 0.5 (git development branch) on a system running RedHat Enterprise Linux (or CentOS) version 5.7.
Before we dive in, let&amp;rsquo;s discuss why such and old version of OS is used in this example.
Why use CentOS/RHEL version 5.7 ? RHEL5 is an old product. Released on 2007-03-15 it will be going through the following life cycle dates:</description>
    </item>
    
    <item>
      <title>Manage Yum Repository List With Foreman</title>
      <link>https://pages.pulegium.eu/journal/manage-yum-repository-list-with-foreman/</link>
      <pubDate>Sun, 18 Mar 2012 07:09:18 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/manage-yum-repository-list-with-foreman/</guid>
      <description>What I missed in The Foreman&amp;rsquo;s default funtionality is the ability to automatically create Yum repo configuration files. For example, if you create a local CentOS mirror, you can specify it as Install Media in Foreman, and the autogenerated kickstart file will use it during the install. However, the installed systems will still get the default CentOS .repo files, which is far from ideal. You want them to point to your local repository, which you used to install the systems.</description>
    </item>
    
    <item>
      <title>How to reset Hetzner servers from AppleScript</title>
      <link>https://pages.pulegium.eu/journal/how-to-reset-hetzner-servers-from-applescript/</link>
      <pubDate>Mon, 30 Jan 2012 07:13:39 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/how-to-reset-hetzner-servers-from-applescript/</guid>
      <description>Hetzner is a great hosting company. It&amp;rsquo;s hard to find a deal that would beat their hosting prices, and the service is superb. In 7 years I&amp;rsquo;ve experienced only one brief network outage, and one power outage (when they changed power outlets or something like that), which was clearly communicated well in advance. So I can only highly recommend them - my experience was only positive one.
They also have a nice administration interface, where you can manage your servers, request IP ranges, control bandwidth monitoring, and request server restarts.</description>
    </item>
    
    <item>
      <title>Building CentOS Machine With Vagrant and VeeWee</title>
      <link>https://pages.pulegium.eu/journal/building-centos-machine-with-vagrant-and-veewee/</link>
      <pubDate>Tue, 29 Nov 2011 07:21:33 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/building-centos-machine-with-vagrant-and-veewee/</guid>
      <description>This is more of a quick checklist for building a CentOS box with Vagrant and VeeWee than a real blog post.
Prerequisites  Oracle VirtualBox installed Vagrant installed (sudo gem install vagrant) VeeWee installed (sudo gem install veewee) CentOS 6.0 i386 DVD ISO downloaded from one of the mirrors listed in http://isoredirect.centos.org/centos/6/isos/i386/  Building a CentOS box  Create working directories and copy the ISO image  $ mkdir -p ~/vagrant/centos60build/iso $ cd ~/vagrant/centos60build $ cp __PATH_TO_THE_ISO_IMAGE__ .</description>
    </item>
    
    <item>
      <title>AJAX User request Authentication in TastyPie</title>
      <link>https://pages.pulegium.eu/journal/ajax-user-authentication-in-tastypie/</link>
      <pubDate>Mon, 14 Nov 2011 07:27:15 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/ajax-user-authentication-in-tastypie/</guid>
      <description>If you&amp;rsquo;re using built in TastyPie user authentication/authorization (HTTP Basic Auth) you might run into a problem with AJAX requests. Here&amp;rsquo;s a typical situation:
 Your main web application is a Django application It requires users to authenticate The application also exposes some functionality via (TastyPie) API, which requires user authentication Your pages uses JavaScript to access this API  When users log on to the Django web application, they get redirected to the standard Dajngo auth pages, where they submit a login form with their credentials.</description>
    </item>
    
    <item>
      <title>Testing Tcp Connections With Python</title>
      <link>https://pages.pulegium.eu/journal/testing-tcp-connections-with-python/</link>
      <pubDate>Thu, 03 Nov 2011 07:30:28 +0100</pubDate>
      
      <guid>https://pages.pulegium.eu/journal/testing-tcp-connections-with-python/</guid>
      <description>layout: post title: &amp;ldquo;Testing TCP connections&amp;rdquo; category: sysadmin tags: [python, networking] {% include JB/setup %}
Here&amp;rsquo;s a quick snippet of python code that attempts to establish a TCP connection and reports whether it was successful or not. Netcat is a lot better suited for this role, but sometimes you may not be able to install it. In these situations this little script can come in handy:
#!/usr/bin/env python import socket import time HOST=&amp;#34;&amp;#34; PORT=&amp;#34;&amp;#34; TIMEOUT=1.</description>
    </item>
    
  </channel>
</rss>